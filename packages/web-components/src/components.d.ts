/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonColor, ButtonLayout, ButtonTypes } from "./components/elements/button/button.model";
export { ButtonColor, ButtonLayout, ButtonTypes } from "./components/elements/button/button.model";
export namespace Components {
    interface MyButton {
        "color": ButtonColor;
        "disabled": boolean;
        "href": string;
        "iconUrl": string;
        "isClear": boolean;
        "layout": ButtonLayout;
        "target": string;
        "type": ButtonTypes;
    }
}
export interface MyButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLMyButtonElement;
}
declare global {
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLElementTagNameMap {
        "my-button": HTMLMyButtonElement;
    }
}
declare namespace LocalJSX {
    interface MyButton {
        "color"?: ButtonColor;
        "disabled"?: boolean;
        "href"?: string;
        "iconUrl"?: string;
        "isClear"?: boolean;
        "layout"?: ButtonLayout;
        "onTrpBtnReseted"?: (event: MyButtonCustomEvent<boolean>) => void;
        "onTrpBtnSubmited"?: (event: MyButtonCustomEvent<boolean>) => void;
        "target"?: string;
        "type"?: ButtonTypes;
    }
    interface IntrinsicElements {
        "my-button": MyButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
        }
    }
}
